version: "3"

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "50051:50051"
    env_file:
      - "env/local.env"
    depends_on:
      - prometheus
      - grafana
      - jaeger  
      - db
    networks:
      - microservice_network      
    volumes:
      - ".:/go/app:cached"
    links:
      - db
      - db-test

  gateway:
    build:
      context: .
      dockerfile: gateway/Dockerfile
    ports:
      - "3000:3000"
    networks:
      - microservice_network      
    links:
      - app
    volumes:
      - ".:/go/app"

  db:
    image: postgres:13-alpine
    container_name: db
    expose:
      - "5432"
    ports:
      - "5432:5432"
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=app
      - POSTGRES_HOST=5432
    networks:
      - microservice_network      
    command: -p 5432
  db-test:
    image: postgres:13-alpine
    container_name:  db-test
    expose:
      - "5433"
    ports:
      - "5433:5432"
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=app_test
      - POSTGRES_HOST=5433
    networks:
      - microservice_network      
    command: -p 5433  
  prometheus:
    container_name: prometheus_container
    image: prom/prometheus
    volumes:
      - ./docker/monitoring/prometheus-local.yml:/etc/prometheus/prometheus.yml:Z
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--storage.tsdb.retention=20d'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    ports:
      - '9090:9090'
    networks:
      - microservice_network

  node_exporter:
    container_name: node_exporter_container
    image: prom/node-exporter
    ports:
      - '9101:9100'
    networks:
      - microservice_network

  grafana:
    container_name: grafana_container
    image: grafana/grafana
    ports:
      - '3001:3000'
    networks:
      - microservice_network

  jaeger:
    container_name: jaeger_container
    restart: always
    image: jaegertracing/all-in-one:1.21
    environment:
      - COLLECTOR_ZIPKIN_HTTP_PORT=9411
    ports:
      - 5775:5775/udp
      - 6831:6831/udp
      - 6832:6832/udp
      - 5778:5778
      - 16686:16686
      - 14268:14268
      - 14250:14250
      - 9411:9411
    networks:
      - microservice_network

networks:
  microservice_network:
    driver: bridge